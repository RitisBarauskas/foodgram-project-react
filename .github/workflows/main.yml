name: Foodgram - diploma

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install flake8 flake8-broken-line flake8-isort
        pip install -r requirements.txt
    - name: Test with flake8
      run: |
        python -m flake8
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME_DOCKER }}
          password: ${{ secrets.PASSWORD_DOCKER }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend
          tags: ritisbarauskas/foodgram-backend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.USER_SERVER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.PASSWORD_DOCKER }} | sudo docker login -u ${{ secrets.USERNAME_DOCKER }} --password-stdin
            cd foodgram-project-react/infra
            sudo docker pull ritisbarauskas/foodgram-backend:latest
            sudo docker pull ritisbarauskas/foodgram_frontend:v1.0
            sudo docker-compose stop
            sudo docker-compose rm web
            cd ../backend/foodgram-project
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            cd ../infra
            sudo docker-compose up -d
